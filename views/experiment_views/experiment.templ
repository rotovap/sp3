// these are the views for the experiment page which shows all the information
// for an experiment
// reagents can be added to the experiment and that will lead to different pages
package experiment_views

import (
	"fmt"
	"strconv"
	"github.com/rotovap/sp3/models"
	"github.com/rotovap/sp3/views/shared/base"
)

// cannot seem to store a variable inside the template and the reference it again
// in another for loop, for example
// so here, the leftSideReagents and rightSideReagents are first gathered
// in the Controller and then passed into the View
// this way the len can be taken and the len used to decide if a "+" should
// be rendered
templ ReactionScheme(leftSideReagents []models.ExperimentReagentAssociation, rightSideReagents []models.ExperimentReagentAssociation) {
	<div class="grid">
		<div style="text-align: center">
			for i := 0; i < len(leftSideReagents); i++ {
				@templ.Raw(leftSideReagents[i].MolSvg)
				if i != len(leftSideReagents)-1 {
					{ "+" }
				}
			}
			<img alt="File:Biochem reaction arrow forward NNNN horiz med.svg" src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0e/Biochem_reaction_arrow_forward_NNNN_horiz_med.svg/75px-Biochem_reaction_arrow_forward_NNNN_horiz_med.svg.png?20170613181819" decoding="async" width="75" height="75" srcset="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0e/Biochem_reaction_arrow_forward_NNNN_horiz_med.svg/113px-Biochem_reaction_arrow_forward_NNNN_horiz_med.svg.png?20170613181819 1.5x, https://upload.wikimedia.org/wikipedia/commons/thumb/0/0e/Biochem_reaction_arrow_forward_NNNN_horiz_med.svg/150px-Biochem_reaction_arrow_forward_NNNN_horiz_med.svg.png?20170613181819 2x" data-file-width="75" data-file-height="75"/>
			for i := 0; i < len(rightSideReagents); i++ {
				@templ.Raw(rightSideReagents[i].MolSvg)
				if i != len(rightSideReagents)-1 {
					{ "+" }
				}
			}
		</div>
	</div>
}

templ ReagentTable(rows []models.GetReagentsInExperimentResult) {
	<table>
		<thead>
			<tr>
				<th scope="col">ID</th>
				<th scope="col">Name</th>
				<th scope="col">Mol. Weight (g/mol)</th>
				<th scope="col">mmol</th>
				<th scope="col">Eq</th>
				<th scope="col">Density (g/mL)</th>
				<th scope="col">Amount (g)</th>
			</tr>
		</thead>
		<tbody>
			for _, r := range rows {
				<tr>
					<td scope="row">{ strconv.Itoa(r.Reagent.Id) }</td>
					<td>{ r.Reagent.Name.String }</td>
					<td>{ strconv.FormatFloat(float64(r.Reagent.MolecularWeight), 'f', -1, 32) }</td>
					<td>MMOL</td>
					<td>{ strconv.FormatFloat(float64(r.Association.Equivalents.Float64), 'f', -1, 32) }</td>
					<td>{ strconv.FormatFloat(float64(r.Reagent.Density.Float64), 'f', -1, 32) }</td>
					<td>{ strconv.FormatFloat(float64(r.Association.AmountPlannedInGrams.Float64), 'f', -1, 32) }</td>
				</tr>
			}
		</tbody>
	</table>
}

templ ExperimentPage(id int, experimentName string, e []models.GetReagentsInExperimentResult, leftSideReagents []models.ExperimentReagentAssociation, rightSideReagents []models.ExperimentReagentAssociation) {
	@base.Base() {
		<header class="container">
			<div class="grid">
				<h1>
					Experiment { strconv.Itoa(id) }: { experimentName }
				</h1>
			</div>
		</header>
		<main class="container">
			@ReactionScheme(leftSideReagents, rightSideReagents)
		</main>
		<main class="container">
			@ReagentTable(e)
			<div style="text-align: center">
				<a href={ templ.URL(fmt.Sprintf("/experiment/%d/addReagent/searchReagents", id)) }>
					<button>Add reagent</button>
				</a>
			</div>
		</main>
	}
}
